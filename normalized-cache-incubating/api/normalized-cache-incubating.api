public abstract interface class com/apollographql/cache/normalized/ApolloStore {
	public abstract fun accessCache (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public abstract fun clearAll ()Z
	public abstract fun dispose ()V
	public abstract fun dump ()Ljava/util/Map;
	public abstract fun getChangedKeys ()Lkotlinx/coroutines/flow/SharedFlow;
	public abstract fun normalize (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;)Ljava/util/Map;
	public abstract fun publish (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun readFragment (Lcom/apollographql/apollo/api/Fragment;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/cache/normalized/ApolloStore$ReadResult;
	public abstract fun readOperation (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/cache/normalized/ApolloStore$ReadResult;
	public abstract fun remove (Lcom/apollographql/cache/normalized/api/CacheKey;Z)Z
	public abstract fun remove (Ljava/util/List;Z)I
	public abstract fun rollbackOptimisticUpdates (Ljava/util/UUID;)Ljava/util/Set;
	public abstract fun writeFragment (Lcom/apollographql/apollo/api/Fragment;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Ljava/util/Set;
	public abstract fun writeOperation (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Ljava/util/Set;
	public abstract fun writeOptimisticUpdates (Lcom/apollographql/apollo/api/Fragment;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/Fragment$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;)Ljava/util/Set;
	public abstract fun writeOptimisticUpdates (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;)Ljava/util/Set;
}

public final class com/apollographql/cache/normalized/ApolloStore$DefaultImpls {
	public static synthetic fun readFragment$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Fragment;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;ILjava/lang/Object;)Lcom/apollographql/cache/normalized/ApolloStore$ReadResult;
	public static synthetic fun readOperation$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;ILjava/lang/Object;)Lcom/apollographql/cache/normalized/ApolloStore$ReadResult;
	public static synthetic fun remove$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/cache/normalized/api/CacheKey;ZILjava/lang/Object;)Z
	public static synthetic fun remove$default (Lcom/apollographql/cache/normalized/ApolloStore;Ljava/util/List;ZILjava/lang/Object;)I
	public static synthetic fun writeFragment$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Fragment;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;ILjava/lang/Object;)Ljava/util/Set;
	public static synthetic fun writeOperation$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;ILjava/lang/Object;)Ljava/util/Set;
	public static synthetic fun writeOptimisticUpdates$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Fragment;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/Fragment$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;ILjava/lang/Object;)Ljava/util/Set;
	public static synthetic fun writeOptimisticUpdates$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;ILjava/lang/Object;)Ljava/util/Set;
}

public final class com/apollographql/cache/normalized/ApolloStore$ReadResult {
	public fun <init> (Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;)V
	public final fun getCacheHeaders ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public final fun getData ()Lcom/apollographql/apollo/api/Executable$Data;
}

public final class com/apollographql/cache/normalized/ApolloStoreKt {
	public static final fun ApolloStore (Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;)Lcom/apollographql/cache/normalized/ApolloStore;
	public static synthetic fun ApolloStore$default (Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;ILjava/lang/Object;)Lcom/apollographql/cache/normalized/ApolloStore;
}

public final class com/apollographql/cache/normalized/CacheInfo : com/apollographql/apollo/api/ExecutionContext$Element {
	public static final field Key Lcom/apollographql/cache/normalized/CacheInfo$Key;
	public synthetic fun <init> (JJJJZLcom/apollographql/apollo/exception/CacheMissException;Lcom/apollographql/apollo/exception/ApolloException;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCacheEndMillis ()J
	public final fun getCacheMissException ()Lcom/apollographql/apollo/exception/CacheMissException;
	public final fun getCacheStartMillis ()J
	public fun getKey ()Lcom/apollographql/apollo/api/ExecutionContext$Key;
	public final fun getNetworkEndMillis ()J
	public final fun getNetworkException ()Lcom/apollographql/apollo/exception/ApolloException;
	public final fun getNetworkStartMillis ()J
	public final fun isCacheHit ()Z
	public final fun isStale ()Z
	public final fun newBuilder ()Lcom/apollographql/cache/normalized/CacheInfo$Builder;
}

public final class com/apollographql/cache/normalized/CacheInfo$Builder {
	public fun <init> ()V
	public final fun build ()Lcom/apollographql/cache/normalized/CacheInfo;
	public final fun cacheEndMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun cacheHit (Z)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun cacheMissException (Lcom/apollographql/apollo/exception/CacheMissException;)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun cacheStartMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun networkEndMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun networkException (Lcom/apollographql/apollo/exception/ApolloException;)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun networkStartMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun stale (Z)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
}

public final class com/apollographql/cache/normalized/CacheInfo$Key : com/apollographql/apollo/api/ExecutionContext$Key {
}

public final class com/apollographql/cache/normalized/CacheMissLoggingInterceptor : com/apollographql/apollo/interceptor/ApolloInterceptor {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun intercept (Lcom/apollographql/apollo/api/ApolloRequest;Lcom/apollographql/apollo/interceptor/ApolloInterceptorChain;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/apollographql/cache/normalized/FetchPolicy : java/lang/Enum {
	public static final field CacheAndNetwork Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field CacheFirst Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field CacheOnly Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field NetworkFirst Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field NetworkOnly Lcom/apollographql/cache/normalized/FetchPolicy;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/apollographql/cache/normalized/FetchPolicy;
	public static fun values ()[Lcom/apollographql/cache/normalized/FetchPolicy;
}

public final class com/apollographql/cache/normalized/FetchPolicyInterceptors {
	public static final fun getCacheAndNetworkInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
	public static final fun getCacheFirstInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
	public static final fun getCacheOnlyInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
	public static final fun getNetworkFirstInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
	public static final fun getNetworkOnlyInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
}

public final class com/apollographql/cache/normalized/NormalizedCache {
	public static final fun -logCacheMisses (Lcom/apollographql/apollo/ApolloClient$Builder;Lkotlin/jvm/functions/Function1;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static synthetic fun -logCacheMisses$default (Lcom/apollographql/apollo/ApolloClient$Builder;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun addCacheHeader (Lcom/apollographql/apollo/api/MutableExecutionOptions;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
	public static final fun cacheHeaders (Lcom/apollographql/apollo/api/ApolloResponse$Builder;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/apollo/api/ApolloResponse$Builder;
	public static final fun cacheHeaders (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Ljava/lang/Object;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Z)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static synthetic fun configureApolloClientBuilder2$default (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;ZILjava/lang/Object;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun doNotStore (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
	public static final fun fetchPolicy (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/cache/normalized/FetchPolicy;)Ljava/lang/Object;
	public static final fun fetchPolicyInterceptor (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/apollo/interceptor/ApolloInterceptor;)Ljava/lang/Object;
	public static final fun getApolloStore (Lcom/apollographql/apollo/ApolloClient;)Lcom/apollographql/cache/normalized/ApolloStore;
	public static final fun getCacheHeaders (Lcom/apollographql/apollo/api/ApolloResponse;)Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public static final fun getCacheInfo (Lcom/apollographql/apollo/api/ApolloResponse;)Lcom/apollographql/cache/normalized/CacheInfo;
	public static final fun isFromCache (Lcom/apollographql/apollo/api/ApolloResponse;)Z
	public static final fun maxStale-HG0u8IE (Lcom/apollographql/apollo/api/MutableExecutionOptions;J)Ljava/lang/Object;
	public static final fun memoryCacheOnly (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
	public static final fun optimisticUpdates (Lcom/apollographql/apollo/ApolloCall;Lcom/apollographql/apollo/api/Mutation$Data;)Lcom/apollographql/apollo/ApolloCall;
	public static final fun optimisticUpdates (Lcom/apollographql/apollo/api/ApolloRequest$Builder;Lcom/apollographql/apollo/api/Mutation$Data;)Lcom/apollographql/apollo/api/ApolloRequest$Builder;
	public static final fun refetchPolicy (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/cache/normalized/FetchPolicy;)Ljava/lang/Object;
	public static final fun refetchPolicyInterceptor (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/apollo/interceptor/ApolloInterceptor;)Ljava/lang/Object;
	public static final fun store (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/ApolloStore;Z)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static synthetic fun store$default (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/ApolloStore;ZILjava/lang/Object;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun storeExpirationDate (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
	public static final fun storePartialResponses (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
	public static final fun storeReceiveDate (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
	public static final fun watch (Lcom/apollographql/apollo/ApolloCall;)Lkotlinx/coroutines/flow/Flow;
	public static final fun watch (Lcom/apollographql/apollo/ApolloCall;Lcom/apollographql/apollo/api/Query$Data;)Lkotlinx/coroutines/flow/Flow;
	public static final fun writeToCacheAsynchronously (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/VersionKt {
	public static final field VERSION Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/ApolloCacheHeaders {
	public static final field DO_NOT_STORE Ljava/lang/String;
	public static final field EVICT_AFTER_READ Ljava/lang/String;
	public static final field EXPIRATION_DATE Ljava/lang/String;
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/ApolloCacheHeaders;
	public static final field MAX_STALE Ljava/lang/String;
	public static final field MEMORY_CACHE_ONLY Ljava/lang/String;
	public static final field RECEIVED_DATE Ljava/lang/String;
	public static final field STALE Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/CacheControlCacheResolver : com/apollographql/cache/normalized/api/CacheResolver {
	public fun <init> (Lcom/apollographql/cache/normalized/api/CacheResolver;)V
	public synthetic fun <init> (Lcom/apollographql/cache/normalized/api/CacheResolver;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lcom/apollographql/cache/normalized/api/MaxAgeProvider;Lcom/apollographql/cache/normalized/api/CacheResolver;)V
	public synthetic fun <init> (Lcom/apollographql/cache/normalized/api/MaxAgeProvider;Lcom/apollographql/cache/normalized/api/CacheResolver;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/CacheHeaders {
	public static final field Companion Lcom/apollographql/cache/normalized/api/CacheHeaders$Companion;
	public static final field NONE Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public static final fun builder ()Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun hasHeader (Ljava/lang/String;)Z
	public final fun headerValue (Ljava/lang/String;)Ljava/lang/String;
	public final fun newBuilder ()Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun plus (Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/cache/normalized/api/CacheHeaders;
}

public final class com/apollographql/cache/normalized/api/CacheHeaders$Builder {
	public fun <init> ()V
	public final fun addHeader (Ljava/lang/String;Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun addHeaders (Ljava/util/Map;)Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun build ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
}

public final class com/apollographql/cache/normalized/api/CacheHeaders$Companion {
	public final fun builder ()Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
}

public final class com/apollographql/cache/normalized/api/CacheKey {
	public static final field Companion Lcom/apollographql/cache/normalized/api/CacheKey$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;[Ljava/lang/String;)V
	public static final fun canDeserialize (Ljava/lang/String;)Z
	public static final fun deserialize (Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/CacheKey;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public static final fun rootKey ()Lcom/apollographql/cache/normalized/api/CacheKey;
	public final fun serialize ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/CacheKey$Companion {
	public final fun canDeserialize (Ljava/lang/String;)Z
	public final fun deserialize (Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/CacheKey;
	public final fun rootKey ()Lcom/apollographql/cache/normalized/api/CacheKey;
}

public abstract interface class com/apollographql/cache/normalized/api/CacheKeyGenerator {
	public abstract fun cacheKeyForObject (Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheKeyGeneratorContext;)Lcom/apollographql/cache/normalized/api/CacheKey;
}

public final class com/apollographql/cache/normalized/api/CacheKeyGeneratorContext {
	public fun <init> (Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;)V
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public abstract class com/apollographql/cache/normalized/api/CacheKeyResolver : com/apollographql/cache/normalized/api/CacheResolver {
	public fun <init> ()V
	public abstract fun cacheKeyForField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Lcom/apollographql/cache/normalized/api/CacheKey;
	public fun listOfCacheKeysForField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/util/List;
	public final fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public abstract interface class com/apollographql/cache/normalized/api/CacheResolver {
	public abstract fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/CacheResolver$ResolvedValue {
	public fun <init> (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/CacheHeaders;)V
	public final fun getCacheHeaders ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public final fun getValue ()Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/ConnectionEmbeddedFieldsProvider : com/apollographql/cache/normalized/api/EmbeddedFieldsProvider {
	public static final field Companion Lcom/apollographql/cache/normalized/api/ConnectionEmbeddedFieldsProvider$Companion;
	public fun <init> (Ljava/util/Map;Ljava/util/Set;)V
	public fun getEmbeddedFields (Lcom/apollographql/cache/normalized/api/EmbeddedFieldsContext;)Ljava/util/List;
}

public final class com/apollographql/cache/normalized/api/ConnectionEmbeddedFieldsProvider$Companion {
}

public final class com/apollographql/cache/normalized/api/ConnectionFieldKeyGenerator : com/apollographql/cache/normalized/api/FieldKeyGenerator {
	public static final field Companion Lcom/apollographql/cache/normalized/api/ConnectionFieldKeyGenerator$Companion;
	public fun <init> (Ljava/util/Map;)V
	public fun getFieldKey (Lcom/apollographql/cache/normalized/api/FieldKeyContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/ConnectionFieldKeyGenerator$Companion {
}

public final class com/apollographql/cache/normalized/api/ConnectionMetadataGenerator : com/apollographql/cache/normalized/api/MetadataGenerator {
	public fun <init> (Ljava/util/Set;)V
	public fun metadataForObject (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/MetadataGeneratorContext;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/api/DefaultCacheResolver : com/apollographql/cache/normalized/api/CacheResolver {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/DefaultCacheResolver;
	public fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/DefaultEmbeddedFieldsProvider : com/apollographql/cache/normalized/api/EmbeddedFieldsProvider {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/DefaultEmbeddedFieldsProvider;
	public fun getEmbeddedFields (Lcom/apollographql/cache/normalized/api/EmbeddedFieldsContext;)Ljava/util/List;
}

public final class com/apollographql/cache/normalized/api/DefaultFieldKeyGenerator : com/apollographql/cache/normalized/api/FieldKeyGenerator {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/DefaultFieldKeyGenerator;
	public fun getFieldKey (Lcom/apollographql/cache/normalized/api/FieldKeyContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/DefaultRecordMerger : com/apollographql/cache/normalized/api/RecordMerger {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/DefaultRecordMerger;
	public fun merge (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/Record;)Lkotlin/Pair;
}

public final class com/apollographql/cache/normalized/api/EmbeddedFieldsContext {
	public fun <init> (Lcom/apollographql/apollo/api/CompiledNamedType;)V
	public final fun getParentType ()Lcom/apollographql/apollo/api/CompiledNamedType;
}

public abstract interface class com/apollographql/cache/normalized/api/EmbeddedFieldsProvider {
	public abstract fun getEmbeddedFields (Lcom/apollographql/cache/normalized/api/EmbeddedFieldsContext;)Ljava/util/List;
}

public final class com/apollographql/cache/normalized/api/EmptyMetadataGenerator : com/apollographql/cache/normalized/api/MetadataGenerator {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/EmptyMetadataGenerator;
	public fun metadataForObject (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/MetadataGeneratorContext;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/api/FieldKeyContext {
	public fun <init> (Ljava/lang/String;Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;)V
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getParentType ()Ljava/lang/String;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public abstract interface class com/apollographql/cache/normalized/api/FieldKeyGenerator {
	public abstract fun getFieldKey (Lcom/apollographql/cache/normalized/api/FieldKeyContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/FieldPolicyCacheResolver : com/apollographql/cache/normalized/api/CacheResolver {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/FieldPolicyCacheResolver;
	public fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/FieldRecordMerger : com/apollographql/cache/normalized/api/RecordMerger {
	public fun <init> (Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldMerger;)V
	public fun merge (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/Record;)Lkotlin/Pair;
}

public final class com/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo {
	public fun <init> (Ljava/lang/Object;Ljava/util/Map;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/Object;Ljava/util/Map;)Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;
	public static synthetic fun copy$default (Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMetadata ()Ljava/util/Map;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/apollographql/cache/normalized/api/FieldRecordMerger$FieldMerger {
	public abstract fun mergeFields (Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;)Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;
}

public final class com/apollographql/cache/normalized/api/GlobalMaxAgeProvider : com/apollographql/cache/normalized/api/MaxAgeProvider {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getMaxAge-5sfh64U (Lcom/apollographql/cache/normalized/api/MaxAgeContext;)J
}

public final class com/apollographql/cache/normalized/api/IdCacheKeyGenerator : com/apollographql/cache/normalized/api/CacheKeyGenerator {
	public fun <init> ()V
	public fun <init> ([Ljava/lang/String;)V
	public synthetic fun <init> ([Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun cacheKeyForObject (Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheKeyGeneratorContext;)Lcom/apollographql/cache/normalized/api/CacheKey;
}

public final class com/apollographql/cache/normalized/api/IdCacheKeyResolver : com/apollographql/cache/normalized/api/CacheKeyResolver {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun cacheKeyForField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Lcom/apollographql/cache/normalized/api/CacheKey;
	public fun listOfCacheKeysForField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/util/List;
}

public abstract interface class com/apollographql/cache/normalized/api/MaxAge {
}

public final class com/apollographql/cache/normalized/api/MaxAge$Duration : com/apollographql/cache/normalized/api/MaxAge {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDuration-UwyO8pc ()J
}

public final class com/apollographql/cache/normalized/api/MaxAge$Inherit : com/apollographql/cache/normalized/api/MaxAge {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/MaxAge$Inherit;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/MaxAgeContext {
	public fun <init> (Ljava/util/List;)V
	public final fun getFieldPath ()Ljava/util/List;
}

public abstract interface class com/apollographql/cache/normalized/api/MaxAgeProvider {
	public abstract fun getMaxAge-5sfh64U (Lcom/apollographql/cache/normalized/api/MaxAgeContext;)J
}

public abstract interface class com/apollographql/cache/normalized/api/MetadataGenerator {
	public abstract fun metadataForObject (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/MetadataGeneratorContext;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/api/MetadataGeneratorContext {
	public fun <init> (Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;)V
	public final fun allArgumentValues ()Ljava/util/Map;
	public final fun argumentValue (Ljava/lang/String;)Ljava/lang/Object;
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public abstract interface class com/apollographql/cache/normalized/api/NormalizedCache : com/apollographql/cache/normalized/api/ReadOnlyNormalizedCache {
	public static final field Companion Lcom/apollographql/cache/normalized/api/NormalizedCache$Companion;
	public abstract fun clearAll ()V
	public abstract fun merge (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;)Ljava/util/Set;
	public abstract fun merge (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;)Ljava/util/Set;
	public static fun prettifyDump (Ljava/util/Map;)Ljava/lang/String;
	public abstract fun remove (Lcom/apollographql/cache/normalized/api/CacheKey;Z)Z
	public abstract fun remove (Ljava/lang/String;)I
}

public final class com/apollographql/cache/normalized/api/NormalizedCache$Companion {
	public final fun prettifyDump (Ljava/util/Map;)Ljava/lang/String;
}

public abstract class com/apollographql/cache/normalized/api/NormalizedCacheFactory : java/io/Closeable {
	public fun <init> ()V
	public abstract fun create ()Lcom/apollographql/cache/normalized/api/NormalizedCache;
}

public final class com/apollographql/cache/normalized/api/OperationCacheExtensionsKt {
	public static final fun dependentKeys (Ljava/util/Collection;)Ljava/util/Set;
	public static final fun normalize (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Ljava/lang/String;)Ljava/util/Map;
	public static final fun normalize (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;)Ljava/util/Map;
	public static synthetic fun normalize$default (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/Map;
	public static synthetic fun normalize$default (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;ILjava/lang/Object;)Ljava/util/Map;
	public static final fun readDataFromCache (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/ReadOnlyNormalizedCache;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/apollo/api/Executable$Data;
	public static final fun readDataFromCache (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/ReadOnlyNormalizedCache;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;)Lcom/apollographql/apollo/api/Executable$Data;
	public static final fun readDataFromCache (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/ReadOnlyNormalizedCache;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/apollo/api/Executable$Data;
	public static final fun readDataFromCache (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/ReadOnlyNormalizedCache;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;)Lcom/apollographql/apollo/api/Executable$Data;
	public static synthetic fun readDataFromCache$default (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/ReadOnlyNormalizedCache;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;ILjava/lang/Object;)Lcom/apollographql/apollo/api/Executable$Data;
	public static synthetic fun readDataFromCache$default (Lcom/apollographql/apollo/api/Executable;Lcom/apollographql/cache/normalized/api/CacheKey;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/ReadOnlyNormalizedCache;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;ILjava/lang/Object;)Lcom/apollographql/apollo/api/Executable$Data;
}

public abstract interface class com/apollographql/cache/normalized/api/ReadOnlyNormalizedCache {
	public abstract fun dump ()Ljava/util/Map;
	public abstract fun loadRecord (Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/cache/normalized/api/Record;
	public abstract fun loadRecords (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Ljava/util/Collection;
}

public final class com/apollographql/cache/normalized/api/Record : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lcom/apollographql/cache/normalized/api/Record$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/UUID;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/UUID;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public final fun fieldKeys ()Ljava/util/Set;
	public final fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/String;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public final fun getFields ()Ljava/util/Map;
	public final fun getKey ()Ljava/lang/String;
	public fun getKeys ()Ljava/util/Set;
	public final fun getMetadata ()Ljava/util/Map;
	public final fun getMutationId ()Ljava/util/UUID;
	public fun getSize ()I
	public final fun getSizeInBytes ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public final fun mergeWith (Lcom/apollographql/cache/normalized/api/Record;)Lkotlin/Pair;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun referencedFields ()Ljava/util/List;
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class com/apollographql/cache/normalized/api/Record$Companion {
}

public final class com/apollographql/cache/normalized/api/RecordKt {
	public static final fun expirationDate (Lcom/apollographql/cache/normalized/api/Record;Ljava/lang/String;)Ljava/lang/Long;
	public static final fun receivedDate (Lcom/apollographql/cache/normalized/api/Record;Ljava/lang/String;)Ljava/lang/Long;
	public static final fun withDates (Lcom/apollographql/cache/normalized/api/Record;Ljava/lang/String;Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/Record;
}

public abstract interface class com/apollographql/cache/normalized/api/RecordMerger {
	public abstract fun merge (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/Record;)Lkotlin/Pair;
}

public final class com/apollographql/cache/normalized/api/RecordMergerKt {
	public static final fun getConnectionRecordMerger ()Lcom/apollographql/cache/normalized/api/FieldRecordMerger;
}

public final class com/apollographql/cache/normalized/api/ResolverContext {
	public fun <init> (Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Ljava/util/List;)V
	public final fun getCacheHeaders ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getFieldKeyGenerator ()Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;
	public final fun getParent ()Ljava/util/Map;
	public final fun getParentKey ()Ljava/lang/String;
	public final fun getParentType ()Ljava/lang/String;
	public final fun getPath ()Ljava/util/List;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public final class com/apollographql/cache/normalized/api/SchemaCoordinatesMaxAgeProvider : com/apollographql/cache/normalized/api/MaxAgeProvider {
	public synthetic fun <init> (Ljava/util/Map;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getMaxAge-5sfh64U (Lcom/apollographql/cache/normalized/api/MaxAgeContext;)J
}

public final class com/apollographql/cache/normalized/api/TypePolicyCacheKeyGenerator : com/apollographql/cache/normalized/api/CacheKeyGenerator {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/TypePolicyCacheKeyGenerator;
	public fun cacheKeyForObject (Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheKeyGeneratorContext;)Lcom/apollographql/cache/normalized/api/CacheKey;
}

public final class com/apollographql/cache/normalized/memory/MemoryCache : com/apollographql/cache/normalized/api/NormalizedCache {
	public fun <init> ()V
	public fun <init> (Lcom/apollographql/cache/normalized/api/NormalizedCache;IJ)V
	public synthetic fun <init> (Lcom/apollographql/cache/normalized/api/NormalizedCache;IJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clearAll ()V
	public fun dump ()Ljava/util/Map;
	public final fun getSize ()I
	public fun loadRecord (Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/cache/normalized/api/Record;
	public fun loadRecords (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Ljava/util/Collection;
	public fun merge (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;)Ljava/util/Set;
	public fun merge (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;)Ljava/util/Set;
	public fun remove (Lcom/apollographql/cache/normalized/api/CacheKey;Z)Z
	public fun remove (Ljava/lang/String;)I
}

public final class com/apollographql/cache/normalized/memory/MemoryCacheFactory : com/apollographql/cache/normalized/api/NormalizedCacheFactory {
	public fun <init> ()V
	public fun <init> (I)V
	public fun <init> (IJ)V
	public synthetic fun <init> (IJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun chain (Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;)Lcom/apollographql/cache/normalized/memory/MemoryCacheFactory;
	public fun close ()V
	public synthetic fun create ()Lcom/apollographql/cache/normalized/api/NormalizedCache;
	public fun create ()Lcom/apollographql/cache/normalized/memory/MemoryCache;
}

